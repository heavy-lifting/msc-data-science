{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOu0nTKaTMy3EXBC+oDyzL2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"jeRvNdlLomh-","executionInfo":{"status":"ok","timestamp":1709241421381,"user_tz":0,"elapsed":1185,"user":{"displayName":"Lucy C","userId":"06382169142738797427"}}},"outputs":[],"source":["# decision trees\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.datasets import load_breast_cancer\n","features, target = load_breast_cancer(return_X_y=True)\n","X_train, X_test, Y_train, Y_test = train_test_split(features, target,\n","test_size=0.30,\n","random_state=0)\n","model = DecisionTreeClassifier(criterion='entropy', max_depth=3, min_samples_leaf=2)\n","model.fit(X_train,Y_train)\n","pred_test=model.predict(X_test)"]},{"cell_type":"code","source":["# gaussian naive bayes\n","import numpy as np\n","X = np.array([[-1,-1],[-2,-1],[-3,-2],[1,1],[2,1],[3,2]])\n","Y = np.array([1,1,1,2,2,2])\n","\n","from sklearn.naive_bayes import GaussianNB\n","\n","clf=GaussianNB()\n","\n","clf.fit(X,Y)\n","\n","GaussianNB()\n","\n","print(clf.predict([[-0.8,-1]]))\n","\n","clf_pf = GaussianNB()\n","\n","clf_pf.partial_fit(X, Y, np.unique(Y))\n","\n","GaussianNB()\n","\n","print(clf_pf.predict([[-0.8,-1]]))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8zWg6ZIfvTRg","executionInfo":{"status":"ok","timestamp":1709074115155,"user_tz":0,"elapsed":262,"user":{"displayName":"Lucy C","userId":"06382169142738797427"}},"outputId":"ecf82aeb-c762-46f4-88de-51b262eb8c09"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1]\n","[1]\n"]}]},{"cell_type":"code","source":["# categorical naive bayes\n","import numpy as py\n","rng = np.random.RandomState(1)\n","X=rng.randint(5, size=(6,100))\n","y = np.array([1,2,3,4,5,6])\n","from sklearn.naive_bayes import CategoricalNB\n","clf = CategoricalNB()\n","clf.fit(X,y)\n","CategoricalNB()\n","print(clf.predict(X[2:3]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IMLc_ZP-wY5H","executionInfo":{"status":"ok","timestamp":1709074228071,"user_tz":0,"elapsed":230,"user":{"displayName":"Lucy C","userId":"06382169142738797427"}},"outputId":"80b487e0-7759-4312-aa40-34bb241702a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3]\n"]}]}]}